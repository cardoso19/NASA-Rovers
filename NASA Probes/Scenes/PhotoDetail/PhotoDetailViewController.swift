//
//  PhotoDetailViewController.swift
//  NASA Probes
//
//  Created by Matheus Cardoso kuhn on 19/04/19.
//  Copyright (c) 2019 MDT. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PhotoDetailDisplayLogic: AnyObject {
    func displayShortCameraName(viewModel: PhotoDetail.ShortName.ViewModel)
    func displayFullCameraName(viewModel: PhotoDetail.FullName.ViewModel)
    func displayImage(viewModel: PhotoDetail.Image.ViewModel)
    func display(error: Error)
}

class PhotoDetailViewController: UIViewController {
    var interactor: PhotoDetailBusinessLogic?
    var router: (NSObjectProtocol & PhotoDetailRoutingLogic & PhotoDetailDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = PhotoDetailInteractor()
        let presenter = PhotoDetailPresenter()
        let router = PhotoDetailRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        showImageData()
    }

    //MARK: - IBOutlet
    @IBOutlet weak var buttonCameraName: UIButton!
    @IBOutlet weak var imageViewPhoto: UIImageView!

    //MARK: - IBAction
    @IBAction func actionChangeCameraName(_ sender: Any) {
        interactor?.showFullCameraName()
    }
    
    //MARK: - Function
    func showImageData() {
        interactor?.showShortCameraName()
        interactor?.downloadImage()
    }
}

//MARK: - PhotoDetailDisplayLogic
extension PhotoDetailViewController: PhotoDetailDisplayLogic {
    func displayShortCameraName(viewModel: PhotoDetail.ShortName.ViewModel) {
        buttonCameraName.setTitle(viewModel.name, for: .normal)
    }
    
    func displayFullCameraName(viewModel: PhotoDetail.FullName.ViewModel) {
        buttonCameraName.setTitle(viewModel.name, for: .normal)
    }
    
    func displayImage(viewModel: PhotoDetail.Image.ViewModel) {
        imageViewPhoto.image = viewModel.image
    }
    
    func display(error: Error) {
        let alertController = UIAlertController(title: "Error", message: error.localizedDescription, preferredStyle: .alert)
        let actionOk = UIAlertAction(title: "Ok", style: .default, handler: nil)
        alertController.addAction(actionOk)
        present(alertController, animated: true, completion: nil)
    }
}
